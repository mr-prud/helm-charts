apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "google-photos-sync.fullname" . }}
  labels:
    {{- include "google-photos-sync.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccountName: {{ include "google-photos-sync.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          restartPolicy: OnFailure
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            args: ["/storage"]
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources:
              {{- toYaml .Values.resources | nindent 16 }}
            volumeMounts:
            - name: client-secret
              mountPath: "/config/client_secret.json"
              subPath: client_secret.json
            - mountPath: "/storage"
              name: storage
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
          - name: client-secret
            secret:
              secretName: {{ .Values.secretCredentials }}
              items:
              - key: clientid
                path: client_secret.json
          - name: storage
            persistentVolumeClaim:
              claimName: {{ .Values.existingClaimStorage }}
